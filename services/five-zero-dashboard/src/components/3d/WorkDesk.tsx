/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 WorkDesk.glb --transform --types 
Files: WorkDesk.glb [1.15MB] > C:\Users\Admin\Documents\IVAR\5.0Robotics\50-machine-14\public\models\WorkDesk-transformed.glb [87.59KB] (92%)
*/

import * as THREE from 'three'
import React, { JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Body1: THREE.Mesh
    Body1027: THREE.Mesh
    Body1029: THREE.Mesh
    Body1031: THREE.Mesh
  }
  materials: {
    F_d5d1cd5348ad45b382ef73240196d0e7: THREE.MeshPhysicalMaterial
    F_42a533d464364d2badc945008e351689: THREE.MeshPhysicalMaterial
    F_a702190916274a44902577d4c3d92525: THREE.MeshPhysicalMaterial
    F_cfa8111f51234b7da017a208e921fab8: THREE.MeshPhysicalMaterial
  }
  animations: any
}

export function WorkDesk(props: JSX.IntrinsicElements['group']) {
  // @ts-ignore
  const { nodes, materials } = useGLTF('/models/WorkDesk-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Body1.geometry} material={materials.F_d5d1cd5348ad45b382ef73240196d0e7} scale={0.01} />
      <mesh geometry={nodes.Body1027.geometry} material={materials.F_42a533d464364d2badc945008e351689} position={[-0.38, -0.06, 0.765]} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
      <mesh geometry={nodes.Body1029.geometry} material={materials.F_a702190916274a44902577d4c3d92525} position={[-0.38, -0.045, 0.765]} rotation={[-Math.PI, 0.277, -Math.PI / 2]} scale={0.01} />
      <mesh geometry={nodes.Body1031.geometry} material={materials.F_cfa8111f51234b7da017a208e921fab8} position={[-0.38, -0.062, 0.765]} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
    </group>
  )
}

useGLTF.preload('/models/WorkDesk-transformed.glb')
