{"version":3,"file":"DataSource.js","sourceRoot":"/","sources":["entities/data-source/objects/DataSource.ts"],"names":[],"mappings":";;;;;;;;;;;;AAIA,MAAa,UAAU;IAOnB,YAAY,EACR,MAAM,EAGT;QACG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,cAAc,MAAM,CAAC,EAAE,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEY,cAAc;;YACvB,OAAO;gBACH,IAAI,EAAE,YAAY;gBAClB,WAAW,EAAE;oBACT,MAAM,EAAE,IAAI,CAAC,MAAM;iBACtB;aACJ,CAAA;QACL,CAAC;KAAA;CAIJ;AA5BD,gCA4BC","sourcesContent":["import { Describable } from \"@/lib/descriptions\";\nimport { DataSourceConfigData } from \"../schemas\";\nimport { Indexable } from \"@/lib/indexable\";\n\nexport class DataSource implements Describable, Indexable {\n\n    public readonly id: number;\n    public readonly slug: string;\n\n    config: DataSourceConfigData;\n\n    constructor({\n        config\n    }: {\n        config: DataSourceConfigData;\n    }) {\n        this.id = config.id;\n        this.slug = `DataSource:${config.id}`;\n        this.config = config;\n    }\n\n    public async getDescription() {\n        return {\n            kind: \"DataSource\",\n            description: {\n                config: this.config\n            }\n        }\n    }\n\n\n\n}"]}