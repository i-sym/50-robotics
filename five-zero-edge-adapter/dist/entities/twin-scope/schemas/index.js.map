{"version":3,"file":"index.js","sourceRoot":"/","sources":["entities/twin-scope/schemas/index.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AAEX,QAAA,qBAAqB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC1C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE;IACd,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE;CACxB,CAAC,CAAC;AAKU,QAAA,0BAA0B,GAAG,OAAC,CAAC,MAAM,CAAC;IAC/C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE;IACd,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE;IACvB,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE;CACxB,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\n\nexport const twinScopeConfigSchema = z.object({\n    id: z.number(),\n    name: z.string(),\n    description: z.string(),\n    createdAt: z.string(),\n});\n\nexport type TwinScopeConfigData = z.infer<typeof twinScopeConfigSchema>;\n\n\nexport const twinScopeDescriptionSchema = z.object({\n    id: z.number(),\n    name: z.string(),\n    description: z.string(),\n    createdAt: z.string(),\n});\n\nexport type TwinScopeDescriptionData = z.infer<typeof twinScopeDescriptionSchema>;\n"]}