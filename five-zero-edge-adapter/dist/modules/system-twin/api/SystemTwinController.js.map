{"version":3,"file":"SystemTwinController.js","sourceRoot":"/","sources":["modules/system-twin/api/SystemTwinController.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA,6BAAuB;AAGvB,MAAa,oBAAoB;IAiE7B,YAAY,EACR,iBAAiB,EAGpB;QAlEM,mBAAc,GAAG,CAAO,CAAU,EAAE,EAAE;YAEzC,IAAI,CAAC;gBAED,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAA;gBAEpF,OAAO,CAAC,CAAC,IAAI,CAAC;oBACV,WAAW,EAAE,UAAU;iBAC1B,CAAC,CAAA;YACN,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACb,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;gBAC9C,OAAO,CAAC,CAAC,IAAI,CAAC;oBACV,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;iBACjC,CAAC,CAAA;YACN,CAAC;QACL,CAAC,CAAA,CAAA;QAEM,iBAAY,GAAG,CAAO,CAAU,EAAE,EAAE;YACvC,MAAM,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAA;YAE9C,MAAM,iBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;YAE9D,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;YAEvF,IAAI,CAAC,SAAS,EAAE,CAAC;gBACb,OAAO,CAAC,CAAC,IAAI,CAAC;oBACV,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,qBAAqB;iBACjC,CAAC,CAAA;YACN,CAAC;YAED,MAAM,WAAW,GAAG,MAAM,SAAS,CAAC,cAAc,EAAE,CAAA;YAEpD,OAAO,CAAC,CAAC,IAAI,CAAC;gBACV,WAAW;aACd,CAAC,CAAA;QACN,CAAC,CAAA,CAAA;QAEM,qBAAgB,GAAG,CAAO,CAAU,EAAE,EAAE;YAC3C,MAAM,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAA;YAEtD,MAAM,qBAAqB,GAAG,OAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAA;YAEtE,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;gBAChE,eAAe,EAAE,qBAAqB;aACzC,CAAC,CAAA;YAEF,OAAO,CAAC,CAAC,IAAI,CAAC;gBACV,aAAa;aAChB,CAAC,CAAA;QACN,CAAC,CAAA,CAAA;QAEM,uBAAkB,GAAG,CAAO,CAAU,EAAE,EAAE;YAC7C,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAA;YAExE,OAAO,CAAC,CAAC,IAAI,CAAC;gBACV,cAAc;aACjB,CAAC,CAAA;QACN,CAAC,CAAA,CAAA;QAQG,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAA;IAC9C,CAAC;CAIJ;AA3ED,oDA2EC","sourcesContent":["import { Context } from \"hono\"\nimport { SystemTwinService } from \"../SystemTwinService\"\nimport { z } from \"zod\"\nimport { desc } from \"drizzle-orm\"\n\nexport class SystemTwinController {\n    private systemTwinService\n\n    public listTwinScopes = async (c: Context) => {\n\n        try {\n\n            const twinScopes = await this.systemTwinService.twinScopeRegistry.listDescriptions()\n\n            return c.json({\n                description: twinScopes\n            })\n        } catch (error) {\n            console.log(\"Error in listTwinScopes\", error);\n            return c.json({\n                success: false,\n                message: JSON.stringify(error)\n            })\n        }\n    }\n\n    public getTwinScope = async (c: Context) => {\n        const twinScopeId = c.req.param('twinScopeId')\n\n        const parsedTwinScopeId = z.coerce.number().parse(twinScopeId)\n\n        const twinScope = await this.systemTwinService.twinScopeRegistry.get(parsedTwinScopeId)\n\n        if (!twinScope) {\n            return c.json({\n                success: false,\n                message: 'TwinScope not found'\n            })\n        }\n\n        const description = await twinScope.getDescription()\n\n        return c.json({\n            description\n        })\n    }\n\n    public getTwinComponent = async (c: Context) => {\n        const twinComponentId = c.req.param('twinComponentId')\n\n        const parsedTwinComponentId = z.coerce.number().parse(twinComponentId)\n\n        const twinComponent = await this.systemTwinService.getTwinComponent({\n            twinComponentId: parsedTwinComponentId\n        })\n\n        return c.json({\n            twinComponent\n        })\n    }\n\n    public listTwinComponents = async (c: Context) => {\n        const twinComponents = await this.systemTwinService.listTwinComponents()\n\n        return c.json({\n            twinComponents\n        })\n    }\n\n\n    constructor({\n        systemTwinService\n    }: {\n        systemTwinService: SystemTwinService\n    }) {\n        this.systemTwinService = systemTwinService\n    }\n\n\n\n}"]}