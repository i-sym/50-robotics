{"version":3,"file":"response.js","sourceRoot":"/","sources":["shared/schemas/modbus/response.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AAEX,QAAA,iBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACtC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE;IACd,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;CACvB,CAAC,CAAC;AAEU,QAAA,kBAAkB,GAAG,OAAC,CAAC,MAAM,CAAC;IACvC,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,KAAK,EAAE,OAAC,CAAC,OAAO,EAAE;CACrB,CAAC,CAAC;AAEU,QAAA,yBAAyB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC9C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;QACd,OAAO,EAAE,IAAI;KAChB,CAAC;IACF,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE;CACrB,CAAC,CAAC;AAEU,QAAA,0BAA0B,GAAG,OAAC,CAAC,kBAAkB,CAAC,QAAQ,EAAE;IACrE,OAAC,CAAC,MAAM,CAAC;QACL,MAAM,EAAE,OAAC,CAAC,OAAO,CAAC,IAAI,CAAC;QACvB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;QAChB,MAAM,EAAE,OAAC,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,CAAC;YACrB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;YACpB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;SACpB,CAAC,CAAC;KACN,CAAC;IACF,OAAC,CAAC,MAAM,CAAC;QACL,MAAM,EAAE,OAAC,CAAC,OAAO,CAAC,OAAO,CAAC;QAC1B,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE;KACtB,CAAC;CACL,CAAC,CAAC;AAEU,QAAA,0BAA0B,GAAG,OAAC,CAAC,MAAM,CAAC;IAC/C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;QACd,OAAO,EAAE,IAAI;KAChB,CAAC;IACF,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;IAClC,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE;IAClB,IAAI,EAAE,OAAC,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;CACrD,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;IAChD,OAAO,EAAE,+BAA+B;CAC3C,CAAC,CAAC;AAEU,QAAA,2BAA2B,GAAG,OAAC,CAAC,kBAAkB,CAAC,QAAQ,EAAE;IACtE,OAAC,CAAC,MAAM,CAAC;QACL,MAAM,EAAE,OAAC,CAAC,OAAO,CAAC,IAAI,CAAC;QACvB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;KACnB,CAAC;IACF,OAAC,CAAC,MAAM,CAAC;QACL,MAAM,EAAE,OAAC,CAAC,OAAO,CAAC,OAAO,CAAC;QAC1B,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE;KACtB,CAAC;CACL,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\n\nexport const pingRequestSchema = z.object({\n    ip: z.string(),\n    port: z.number(),\n    modbusId: z.number(),\n});\n\nexport const pingResponseSchema = z.object({\n    time: z.string(),\n    alive: z.boolean(),\n});\n\nexport const readRegisterRequestSchema = z.object({\n    ip: z.string().ip({\n        version: 'v4'\n    }),\n    port: z.number(),\n    modbusId: z.number(),\n    register: z.number(),\n    length: z.number(),\n});\n\nexport const readRegisterResponseSchema = z.discriminatedUnion('status', [\n    z.object({\n        status: z.literal('ok'),\n        time: z.number(),\n        fields: z.array(z.object({\n            register: z.number(),\n            value: z.number(),\n        })),\n    }),\n    z.object({\n        status: z.literal('error'),\n        message: z.string(),\n    }),\n]);\n\nexport const writeRegisterRequestSchema = z.object({\n    ip: z.string().ip({\n        version: 'v4'\n    }),\n    port: z.number().min(0).max(65535),\n    modbusId: z.number(),\n    register: z.number(),\n    length: z.number(),\n    data: z.array(z.number().min(0).max(65535)).min(1),\n}).refine(data => data.length === data.data.length, {\n    message: 'data length must match length',\n});\n\nexport const writeRegisterResponseSchema = z.discriminatedUnion('status', [\n    z.object({\n        status: z.literal('ok'),\n        time: z.number(),\n    }),\n    z.object({\n        status: z.literal('error'),\n        message: z.string(),\n    }),\n]);\n\nexport type PingRequestData = z.infer<typeof pingRequestSchema>;\nexport type PingResponseData = z.infer<typeof pingResponseSchema>;\nexport type ReadRegisterRequestData = z.infer<typeof readRegisterRequestSchema>;\nexport type ReadRegisterResponseData = z.infer<typeof readRegisterResponseSchema>;\nexport type WriteRegisterRequestData = z.infer<typeof writeRegisterRequestSchema>;\nexport type WriteRegisterResponseData = z.infer<typeof writeRegisterResponseSchema>;"]}