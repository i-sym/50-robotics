{"version":3,"file":"preview.js","sourceRoot":"/","sources":["shared/schemas/plants/preview.ts"],"names":[],"mappings":";;;AAAA,6BAAuB;AACvB,uCAA8E;AAEjE,QAAA,oBAAoB,GAAG,OAAC,CAAC,kBAAkB,CAAC,MAAM,EAAE;IAC7D,OAAC,CAAC,MAAM,CAAC;QACL,IAAI,EAAE,OAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;QACzB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;QACjB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;KACnB,CAAC;IACF,OAAC,CAAC,MAAM,CAAC;QACL,IAAI,EAAE,OAAC,CAAC,OAAO,CAAC,MAAM,CAAC;QACvB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;KACpB,CAAC;IACF,OAAC,CAAC,MAAM,CAAC;QACL,IAAI,EAAE,OAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;QACzB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;KACpB,CAAC;CACL,CAAC,CAAA;AAEW,QAAA,qBAAqB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC1C,oBAAoB,EAAE,+BAAqB;IAC3C,MAAM,EAAE,OAAC,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,CAAC,OAAC,CAAC,MAAM,EAAE,EAAE,OAAC,CAAC,KAAK,CAAC,CAAC,OAAC,CAAC,MAAM,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;CAC3E,CAAC,CAAA;AAEW,QAAA,kBAAkB,GAAG,OAAC,CAAC,MAAM,CAAC;IACvC,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC,IAAI,EAAE;IAC3B,IAAI,EAAE,OAAC,CAAC,MAAM,CAAC;QACX,YAAY,EAAE,6BAAqB,CAAC,QAAQ,EAAE;QAC9C,KAAK,EAAE,6BAAqB,CAAC,QAAQ,EAAE;QACvC,MAAM,EAAE,6BAAqB,CAAC,QAAQ,EAAE;QACxC,KAAK,EAAE,6BAAqB,CAAC,QAAQ,EAAE;KAC1C,CAAC;CACL,CAAC,CAAA;AAMW,QAAA,iBAAiB,GAAG,OAAC,CAAC,MAAM,CAAC;IACtC,IAAI,EAAE,OAAC,CAAC,OAAO,EAAE;CACpB,CAAC,CAAA;AAEW,QAAA,qBAAqB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC1C,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE;IACd,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,WAAW,EAAE,OAAC,CAAC,OAAO,EAAE;IACxB,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC,IAAI,EAAE;IAC3B,UAAU,EAAE,OAAC,CAAC,MAAM,CAAC;QACjB,KAAK,EAAE,4BAAoB;QAC3B,MAAM,EAAE,4BAAoB;QAC5B,aAAa,EAAE,4BAAoB;KACtC,CAAC;IACF,eAAe,EAAE,qCAA2B;CAC/C,CAAC,CAAA;AAEW,QAAA,kBAAkB,GAAG,OAAC,CAAC,MAAM,CAAC;IACvC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE;IACd,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;IAChB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;IACpB,SAAS,EAAE,OAAC,CAAC,KAAK,CAAC,6BAAqB,CAAC;CAC5C,CAAC,CAAA","sourcesContent":["import { z } from 'zod'\nimport { datapointConfigSchema, deviceSwitchingConfigSchema } from './details'\n\nexport const datapointValueSchema = z.discriminatedUnion('type', [\n    z.object({\n        type: z.literal('number'),\n        value: z.number(),\n        unit: z.string(),\n    }),\n    z.object({\n        type: z.literal('enum'),\n        value: z.string(),\n    }),\n    z.object({\n        type: z.literal('string'),\n        value: z.string(),\n    }),\n])\n\nexport const datapointSeriesSchema = z.object({\n    datapointDescription: datapointConfigSchema,\n    values: z.array(z.record(z.string(), z.union([z.number(), z.string()])))\n})\n\nexport const previewChartSchema = z.object({\n    lastUpdate: z.coerce.date(),\n    data: z.object({\n        sunElevation: datapointSeriesSchema.nullable(),\n        price: datapointSeriesSchema.nullable(),\n        status: datapointSeriesSchema.nullable(),\n        power: datapointSeriesSchema.nullable()\n    })\n})\n\nexport type DatapointSeriesData = z.infer<typeof datapointSeriesSchema>\nexport type PreviewChartData = z.infer<typeof previewChartSchema>\n\n\nexport const pingabilitySchema = z.object({\n    ping: z.boolean(),\n})\n\nexport const inverterPreviewSchema = z.object({\n    id: z.number(),\n    name: z.string(),\n    pingability: z.boolean(),\n    lastUpdate: z.coerce.date(),\n    datapoints: z.object({\n        power: datapointValueSchema,\n        status: datapointValueSchema,\n        switchingMode: datapointValueSchema,\n    }),\n    switchingConfig: deviceSwitchingConfigSchema\n})\n\nexport const plantPreviewSchema = z.object({\n    id: z.number(),\n    name: z.string(),\n    location: z.string(),\n    inverters: z.array(inverterPreviewSchema)\n})\n\nexport type PlantPreviewData = z.infer<typeof plantPreviewSchema>\nexport type InverterPreviewData = z.infer<typeof inverterPreviewSchema>\nexport type DatapointValueData = z.infer<typeof datapointValueSchema>\nexport type PingabilityData = z.infer<typeof pingabilitySchema>"]}