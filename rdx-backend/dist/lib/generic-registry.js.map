{"version":3,"file":"generic-registry.js","sourceRoot":"/","sources":["lib/generic-registry.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGA,MAAa,eAAe;IAA5B;QACqB,aAAQ,GAAmB,IAAI,GAAG,EAAE,CAAC;QACrC,iBAAY,GAAmB,IAAI,GAAG,EAAE,CAAC;IAiC9D,CAAC;IA/BU,QAAQ,CAAC,IAAO;QACnB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAEM,GAAG,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAEM,SAAS,CAAC,IAAY;QACzB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAEM,MAAM;QACT,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;IAC9C,CAAC;IAEY,gBAAgB;;YACzB,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAA;QAChF,CAAC;KAAA;IAEY,cAAc;;YACvB,OAAO;gBACH,IAAI,EAAE,iBAAiB;gBACvB,WAAW,EAAE;oBACT,KAAK,EAAE,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;iBAC/E;aACJ,CAAA;QACL,CAAC;KAAA;CAGJ;AAnCD,0CAmCC","sourcesContent":["import { Indexable } from \"./indexable\";\nimport { Describable } from \"./descriptions\";\n\nexport class GenericRegistry<T extends (Indexable & Describable)> {\n    private readonly registry: Map<number, T> = new Map();\n    private readonly slugRegistry: Map<string, T> = new Map();\n\n    public register(item: T) {\n        this.registry.set(item.id, item);\n        this.slugRegistry.set(item.slug, item);\n    }\n\n    public get(id: number): T | undefined {\n        return this.registry.get(id);\n    }\n\n    public getBySlug(slug: string): T | undefined {\n        return this.slugRegistry.get(slug);\n    }\n\n    public asList(): T[] {\n        return Array.from(this.registry.values());\n    }\n\n    public async listDescriptions() {\n        return await Promise.all(this.asList().map((item) => item.getDescription()))\n    }\n\n    public async getDescription() {\n        return {\n            kind: \"GenericRegistry\",\n            description: {\n                items: await Promise.all(this.asList().map((item) => item.getDescription()))\n            }\n        }\n    }\n\n\n}"]}